name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov flake8 black isort mypy bandit safety

      - name: Install package (editable)
        run: |
          if [ -f pyproject.toml ] || [ -f setup.py ] || [ -f setup.cfg ]; then
            pip install -e .
          fi

      - name: Lint with flake8
        run: |
          flake8 src --max-line-length=120 --count --show-source --statistics

      - name: Check code formatting with black
        run: |
          black --check src --line-length=120

      - name: Check import sorting with isort
        run: |
          isort -c src

      - name: Type check with mypy
        run: |
          mypy --ignore-missing-imports src

      - name: Security check with bandit
        run: |
          bandit -r src

      - name: Safety check
        run: |
          safety check

      - name: Run tests
        env:
          BB_API_KEY: test
          PYTHONPATH: src
        run: |
          mkdir -p reports
          pytest -q

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            reports/
            coverage.xml

      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella